builder:
  track: dev

labels:
  app-group: estafette-ci-extensions
  team: estafette-team
  language: golang

version:
  semver:
    major: 0
    minor: 1

stages:
  build:
    image: golang:1.15.1-alpine3.12
    env:
      CGO_ENABLED: 0
      GOOS: linux
      GOGC: off
    commands:
    - go test ./...
    - go build -a -installsuffix cgo -ldflags "-X main.appgroup=${ESTAFETTE_LABEL_APP_GROUP} -X main.app=${ESTAFETTE_GIT_NAME} -X main.version=${ESTAFETTE_BUILD_VERSION} -X main.revision=${ESTAFETTE_GIT_REVISION} -X main.branch=${ESTAFETTE_GIT_BRANCH} -X main.buildDate=${ESTAFETTE_BUILD_DATETIME}" -o ./publish/${ESTAFETTE_GIT_NAME} .

  bake:
    image: extensions/docker:dev
    action: build
    container: helmfile
    dontExpand:
    - PATH
    inline: |
      FROM alpine:3.12

      LABEL maintainer="estafette.io" \
            description="The ${ESTAFETTE_GIT_NAME} component is an Estafette extension to assist with linting, diffing and applying Helmfile profiles"

      ENV HELM_VERSION="v3.3.1" \
          HELM_DIFF_VERSION="v3.1.3" \
          HELM_GCS_VERSION="0.3.6" \
          HELMFILE_VERSION="v0.128.0"

      RUN apk add --update --upgrade  --no-cache \
            git \
            bash \
            openssl \
            curl \
            ca-certificates \
          && curl -L https://get.helm.sh/helm-${HELM_VERSION}-linux-amd64.tar.gz | tar xvz \
          && mv linux-amd64/helm /usr/bin/helm \
          && chmod +x /usr/bin/helm \
          && rm -rf linux-amd64 \
          && mkdir -p ~/.kube ~/.helm/plugins \
          && helm plugin install https://github.com/databus23/helm-diff --version ${HELM_DIFF_VERSION} \
          && helm plugin install https://github.com/hayorov/helm-gcs --version ${HELM_GCS_VERSION} \
          && helm plugin list \
          && curl -L https://github.com/roboll/helmfile/releases/download/${HELMFILE_VERSION}/helmfile_linux_amd64 -o /usr/bin/helmfile \
          && chmod +x /usr/bin/helmfile \
          && apk del curl \
          && rm -f /var/cache/apk/*

      COPY ${ESTAFETTE_GIT_NAME} /

      WORKDIR /estafette-work

      ENV ESTAFETTE_LOG_FORMAT="console" \
          ESTAFETTE_LOG_LEVEL="info" \
          GOOGLE_APPLICATION_CREDENTIALS="/gcp-service-account/service-account-key.json"

      RUN printenv

      ENTRYPOINT ["/${ESTAFETTE_GIT_NAME}"]
    repositories:
    - extensions
    path: ./publish

  test-lint:
    image: extensions/helmfile:${ESTAFETTE_BUILD_VERSION}
    action: lint
    file: test-helmfile.yaml

  run-kind:
    services:
    - name: kubernetes
      image: bsycorp/kind:latest-1.17
      readiness:
        path: /kubernetes-ready
        port: 10080

  test-diff:
    image: extensions/helmfile:${ESTAFETTE_BUILD_VERSION}
    action: diff
    file: test-helmfile.yaml

  test-apply:
    image: extensions/helmfile:${ESTAFETTE_BUILD_VERSION}
    action: apply
    file: test-helmfile.yaml

  push-to-docker-hub:
    image: extensions/docker:dev
    action: push
    container: helmfile
    repositories:
    - extensions

  slack-notify:
    image: extensions/slack-build-status:dev
    workspace: estafette
    channels:
    - '#build-status'
    when:
      status == 'succeeded' ||
      status == 'failed'

releases:
  dev:
    triggers:
    - pipeline:
        name: self
        branch: .+
    stages:
      tag-container-image:
        image: extensions/docker:dev
        action: tag
        container: helmfile
        repositories:
        - extensions
        tags:
        - dev

  beta:
    stages:
      tag-container-image:
        image: extensions/docker:dev
        action: tag
        container: helmfile
        repositories:
        - extensions
        tags:
        - beta

      slack-notify:
        image: extensions/slack-build-status:dev
        workspace: estafette
        channels:
        - '#build-status'
        when:
          status == 'succeeded' ||
          status == 'failed'

  stable:
    stages:
      tag-container-image:
        image: extensions/docker:dev
        action: tag
        container: helmfile
        repositories:
        - extensions
        tags:
        - stable
        - latest

      slack-notify:
        image: extensions/slack-build-status:dev
        workspace: estafette
        channels:
        - '#build-status'
        when:
          status == 'succeeded' ||
          status == 'failed'